;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 15/04/2016 10:55:52
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2870      	GOTO       112
_Delay_500us:
;__Lib_Delays.c,27 :: 		void Delay_500us() {
;__Lib_Delays.c,28 :: 		Delay_us(498);
0x0003	0x3002      	MOVLW      2
0x0004	0x1283      	BCF        STATUS, 5
0x0005	0x1303      	BCF        STATUS, 6
0x0006	0x00FC      	MOVWF      R12
0x0007	0x3049      	MOVLW      73
0x0008	0x00FD      	MOVWF      R13
L_Delay_500us4:
0x0009	0x0BFD      	DECFSZ     R13, 1
0x000A	0x2809      	GOTO       L_Delay_500us4
0x000B	0x0BFC      	DECFSZ     R12, 1
0x000C	0x2809      	GOTO       L_Delay_500us4
0x000D	0x0000      	NOP
0x000E	0x0000      	NOP
;__Lib_Delays.c,29 :: 		}
L_end_Delay_500us:
0x000F	0x0008      	RETURN
; end of _Delay_500us
_SPI1_Init:
;__Lib_SPI_c345.c,16 :: 		
;__Lib_SPI_c345.c,19 :: 		
0x0010	0x1683      	BSF        STATUS, 5
0x0011	0x1303      	BCF        STATUS, 6
0x0012	0x1287      	BCF        TRISC5_bit, BitPos(TRISC5_bit+0)
;__Lib_SPI_c345.c,20 :: 		
0x0013	0x1187      	BCF        TRISC3_bit, BitPos(TRISC3_bit+0)
;__Lib_SPI_c345.c,21 :: 		
0x0014	0x1607      	BSF        TRISC4_bit, BitPos(TRISC4_bit+0)
;__Lib_SPI_c345.c,23 :: 		
0x0015	0x1283      	BCF        STATUS, 5
0x0016	0x0194      	CLRF       SSPCON
;__Lib_SPI_c345.c,24 :: 		
0x0017	0x3040      	MOVLW      64
0x0018	0x1683      	BSF        STATUS, 5
0x0019	0x0094      	MOVWF      SSPSTAT
;__Lib_SPI_c345.c,25 :: 		
0x001A	0x1283      	BCF        STATUS, 5
0x001B	0x1694      	BSF        SSPCON, 5
;__Lib_SPI_c345.c,27 :: 		
L_end_SPI1_Init:
0x001C	0x0008      	RETURN
; end of _SPI1_Init
_SPI1_Write:
;__Lib_SPI_c345.c,67 :: 		
;__Lib_SPI_c345.c,70 :: 		
0x001D	0x1283      	BCF        STATUS, 5
0x001E	0x1303      	BCF        STATUS, 6
0x001F	0x0824      	MOVF       FARG_SPI1_Write_data_, 0
0x0020	0x0093      	MOVWF      SSPBUF
;__Lib_SPI_c345.c,71 :: 		
L_SPI1_Write8:
0x0021	0x1683      	BSF        STATUS, 5
0x0022	0x1814      	BTFSC      SSPSTAT, 0
0x0023	0x2826      	GOTO       L_SPI1_Write9
;__Lib_SPI_c345.c,72 :: 		
0x0024	0x0000      	NOP
0x0025	0x2821      	GOTO       L_SPI1_Write8
L_SPI1_Write9:
;__Lib_SPI_c345.c,73 :: 		
0x0026	0x1283      	BCF        STATUS, 5
0x0027	0x0813      	MOVF       SSPBUF, 0
0x0028	0x00F0      	MOVWF      R0
;__Lib_SPI_c345.c,75 :: 		
L_end_SPI1_Write:
0x0029	0x0008      	RETURN
; end of _SPI1_Write
_SPI1_Read:
;__Lib_SPI_c345.c,56 :: 		
;__Lib_SPI_c345.c,57 :: 		
0x002A	0x1283      	BCF        STATUS, 5
0x002B	0x1303      	BCF        STATUS, 6
0x002C	0x0824      	MOVF       FARG_SPI1_Read_buffer, 0
0x002D	0x0093      	MOVWF      SSPBUF
;__Lib_SPI_c345.c,58 :: 		
L_SPI1_Read6:
0x002E	0x1683      	BSF        STATUS, 5
0x002F	0x1814      	BTFSC      SSPSTAT, 0
0x0030	0x2833      	GOTO       L_SPI1_Read7
;__Lib_SPI_c345.c,59 :: 		
0x0031	0x0000      	NOP
0x0032	0x282E      	GOTO       L_SPI1_Read6
L_SPI1_Read7:
;__Lib_SPI_c345.c,60 :: 		
0x0033	0x1283      	BCF        STATUS, 5
0x0034	0x0813      	MOVF       SSPBUF, 0
0x0035	0x00F0      	MOVWF      R0
;__Lib_SPI_c345.c,63 :: 		
L_end_SPI1_Read:
0x0036	0x0008      	RETURN
; end of _SPI1_Read
_Button:
;__Lib_Button.c,6 :: 		
;__Lib_Button.c,8 :: 		
0x0037	0x1283      	BCF        STATUS, 5
0x0038	0x1303      	BCF        STATUS, 6
0x0039	0x01A9      	CLRF       Button_rslt_L0
;__Lib_Button.c,11 :: 		
0x003A	0x0825      	MOVF       FARG_Button_pin, 0
0x003B	0x00F1      	MOVWF      R1
0x003C	0x3001      	MOVLW      1
0x003D	0x00F0      	MOVWF      R0
0x003E	0x0871      	MOVF       R1, 0
L__Button5:
0x003F	0x1903      	BTFSC      STATUS, 2
0x0040	0x2845      	GOTO       L__Button6
0x0041	0x0DF0      	RLF        R0, 1
0x0042	0x1070      	BCF        R0, 0
0x0043	0x3EFF      	ADDLW      255
0x0044	0x283F      	GOTO       L__Button5
L__Button6:
0x0045	0x0870      	MOVF       R0, 0
0x0046	0x00A8      	MOVWF      Button_pMask_L0
;__Lib_Button.c,13 :: 		
0x0047	0x0824      	MOVF       FARG_Button_port, 0
0x0048	0x0084      	MOVWF      FSR
0x0049	0x0870      	MOVF       R0, 0
0x004A	0x0500      	ANDWF      INDF, 0
0x004B	0x00F1      	MOVWF      R1
0x004C	0x0871      	MOVF       R1, 0
0x004D	0x3001      	MOVLW      1
0x004E	0x1D03      	BTFSS      STATUS, 2
0x004F	0x3000      	MOVLW      0
0x0050	0x00F0      	MOVWF      R0
0x0051	0x0827      	MOVF       FARG_Button_active_state, 0
0x0052	0x06F0      	XORWF      R0, 1
0x0053	0x1903      	BTFSC      STATUS, 2
0x0054	0x286D      	GOTO       L_Button0
;__Lib_Button.c,15 :: 		
L_Button1:
0x0055	0x0826      	MOVF       FARG_Button_time_ms, 0
0x0056	0x3C00      	SUBLW      0
0x0057	0x1803      	BTFSC      STATUS, 0
0x0058	0x285D      	GOTO       L_Button2
;__Lib_Button.c,16 :: 		
0x0059	0x2003      	CALL       _Delay_500us
;__Lib_Button.c,17 :: 		
0x005A	0x2003      	CALL       _Delay_500us
;__Lib_Button.c,18 :: 		
0x005B	0x03A6      	DECF       FARG_Button_time_ms, 1
;__Lib_Button.c,19 :: 		
0x005C	0x2855      	GOTO       L_Button1
L_Button2:
;__Lib_Button.c,21 :: 		
0x005D	0x0824      	MOVF       FARG_Button_port, 0
0x005E	0x0084      	MOVWF      FSR
0x005F	0x0828      	MOVF       Button_pMask_L0, 0
0x0060	0x0500      	ANDWF      INDF, 0
0x0061	0x00F1      	MOVWF      R1
0x0062	0x0871      	MOVF       R1, 0
0x0063	0x3001      	MOVLW      1
0x0064	0x1D03      	BTFSS      STATUS, 2
0x0065	0x3000      	MOVLW      0
0x0066	0x00F0      	MOVWF      R0
0x0067	0x0827      	MOVF       FARG_Button_active_state, 0
0x0068	0x06F0      	XORWF      R0, 1
0x0069	0x1903      	BTFSC      STATUS, 2
0x006A	0x286D      	GOTO       L_Button3
;__Lib_Button.c,22 :: 		
0x006B	0x30FF      	MOVLW      255
0x006C	0x00A9      	MOVWF      Button_rslt_L0
L_Button3:
;__Lib_Button.c,23 :: 		
L_Button0:
;__Lib_Button.c,25 :: 		
0x006D	0x0829      	MOVF       Button_rslt_L0, 0
0x006E	0x00F0      	MOVWF      R0
;__Lib_Button.c,26 :: 		
L_end_Button:
0x006F	0x0008      	RETURN
; end of _Button
_main:
;programa10.c,8 :: 		void main() {
;programa10.c,13 :: 		ANSEL = 0X00;
0x0070	0x1683      	BSF        STATUS, 5
0x0071	0x1703      	BSF        STATUS, 6
0x0072	0x0188      	CLRF       ANSEL
;programa10.c,14 :: 		TRISA = 0XFF;
0x0073	0x30FF      	MOVLW      255
0x0074	0x1303      	BCF        STATUS, 6
0x0075	0x0085      	MOVWF      TRISA
;programa10.c,15 :: 		ANSELH=0X00;
0x0076	0x1703      	BSF        STATUS, 6
0x0077	0x0189      	CLRF       ANSELH
;programa10.c,16 :: 		TRISE = 0X00;
0x0078	0x1303      	BCF        STATUS, 6
0x0079	0x0189      	CLRF       TRISE
;programa10.c,17 :: 		TRISB = 0X00;
0x007A	0x0186      	CLRF       TRISB
;programa10.c,18 :: 		TRISD = 0XFF;
0x007B	0x30FF      	MOVLW      255
0x007C	0x0088      	MOVWF      TRISD
;programa10.c,19 :: 		PORTB = 0X00;
0x007D	0x1283      	BCF        STATUS, 5
0x007E	0x0186      	CLRF       PORTB
;programa10.c,21 :: 		Chip_Select = 1;                       // Deselecccionar la memoria
0x007F	0x1787      	BSF        RC7_bit, BitPos(RC7_bit+0)
;programa10.c,22 :: 		Chip_Select_Direction = 0;             // Set CS# pin as Output
0x0080	0x1683      	BSF        STATUS, 5
0x0081	0x1387      	BCF        TRISC7_bit, BitPos(TRISC7_bit+0)
;programa10.c,23 :: 		SPI1_Init();
0x0082	0x2010      	CALL       _SPI1_Init
;programa10.c,25 :: 		Chip_Select = 1;                       // Seleccionar la memoria
0x0083	0x1787      	BSF        RC7_bit, BitPos(RC7_bit+0)
;programa10.c,26 :: 		while(1) //Bucle infinito.
L_main0:
;programa10.c,28 :: 		DIRECCION = ((PORTA)&0x0F)|0x00; //Captura de la dirección.
0x0084	0x300F      	MOVLW      15
0x0085	0x0505      	ANDWF      PORTA, 0
0x0086	0x00A2      	MOVWF      main_DIRECCION_L0
;programa10.c,30 :: 		Chip_Select = 0;                       // Seleccionar la memoria
0x0087	0x1387      	BCF        RC7_bit, BitPos(RC7_bit+0)
;programa10.c,31 :: 		SPI1_Write(0b00000011);
0x0088	0x3003      	MOVLW      3
0x0089	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x008A	0x201D      	CALL       _SPI1_Write
;programa10.c,32 :: 		SPI1_Write(DIRECCION);
0x008B	0x0822      	MOVF       main_DIRECCION_L0, 0
0x008C	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x008D	0x201D      	CALL       _SPI1_Write
;programa10.c,33 :: 		DATO=SPI1_Read(0);
0x008E	0x01A4      	CLRF       FARG_SPI1_Read_buffer
0x008F	0x202A      	CALL       _SPI1_Read
0x0090	0x0870      	MOVF       R0, 0
0x0091	0x00A3      	MOVWF      main_DATO_L0
;programa10.c,34 :: 		Chip_Select = 1;                       // Deselecccionar la memoria
0x0092	0x1787      	BSF        RC7_bit, BitPos(RC7_bit+0)
;programa10.c,36 :: 		PORTB = DATO;
0x0093	0x0870      	MOVF       R0, 0
0x0094	0x0086      	MOVWF      PORTB
;programa10.c,37 :: 		delay_ms(100); //Retardo de 100 ms para graficar.
0x0095	0x3002      	MOVLW      2
0x0096	0x00FB      	MOVWF      R11
0x0097	0x3004      	MOVLW      4
0x0098	0x00FC      	MOVWF      R12
0x0099	0x30BA      	MOVLW      186
0x009A	0x00FD      	MOVWF      R13
L_main2:
0x009B	0x0BFD      	DECFSZ     R13, 1
0x009C	0x289B      	GOTO       L_main2
0x009D	0x0BFC      	DECFSZ     R12, 1
0x009E	0x289B      	GOTO       L_main2
0x009F	0x0BFB      	DECFSZ     R11, 1
0x00A0	0x289B      	GOTO       L_main2
0x00A1	0x0000      	NOP
;programa10.c,39 :: 		if( Button( &PORTA, 4, 10, 0) )
0x00A2	0x3005      	MOVLW      PORTA
0x00A3	0x00A4      	MOVWF      FARG_Button_port
0x00A4	0x3004      	MOVLW      4
0x00A5	0x00A5      	MOVWF      FARG_Button_pin
0x00A6	0x300A      	MOVLW      10
0x00A7	0x00A6      	MOVWF      FARG_Button_time_ms
0x00A8	0x01A7      	CLRF       FARG_Button_active_state
0x00A9	0x2037      	CALL       _Button
0x00AA	0x0870      	MOVF       R0, 0
0x00AB	0x1903      	BTFSC      STATUS, 2
0x00AC	0x28C9      	GOTO       L_main3
;programa10.c,41 :: 		DATO = ~PORTD; //Captura del valor del dato.
0x00AD	0x0908      	COMF       PORTD, 0
0x00AE	0x00A3      	MOVWF      main_DATO_L0
;programa10.c,43 :: 		Chip_Select = 0;                       // Seleccionar la memoria
0x00AF	0x1387      	BCF        RC7_bit, BitPos(RC7_bit+0)
;programa10.c,44 :: 		SPI1_Write(0b00000110);                //Habilita la escritura
0x00B0	0x3006      	MOVLW      6
0x00B1	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x00B2	0x201D      	CALL       _SPI1_Write
;programa10.c,45 :: 		Chip_Select = 1;
0x00B3	0x1787      	BSF        RC7_bit, BitPos(RC7_bit+0)
;programa10.c,48 :: 		Chip_Select = 0;                       // Seleccionar la memoria
0x00B4	0x1387      	BCF        RC7_bit, BitPos(RC7_bit+0)
;programa10.c,49 :: 		SPI1_Write(0b00000010);
0x00B5	0x3002      	MOVLW      2
0x00B6	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x00B7	0x201D      	CALL       _SPI1_Write
;programa10.c,50 :: 		SPI1_Write(DIRECCION);
0x00B8	0x0822      	MOVF       main_DIRECCION_L0, 0
0x00B9	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x00BA	0x201D      	CALL       _SPI1_Write
;programa10.c,51 :: 		SPI1_Write(DATO);
0x00BB	0x0823      	MOVF       main_DATO_L0, 0
0x00BC	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x00BD	0x201D      	CALL       _SPI1_Write
;programa10.c,52 :: 		Chip_Select = 1;                       // Deselecccionar la memoria
0x00BE	0x1787      	BSF        RC7_bit, BitPos(RC7_bit+0)
;programa10.c,54 :: 		delay_ms(50);
0x00BF	0x3082      	MOVLW      130
0x00C0	0x00FC      	MOVWF      R12
0x00C1	0x30DD      	MOVLW      221
0x00C2	0x00FD      	MOVWF      R13
L_main4:
0x00C3	0x0BFD      	DECFSZ     R13, 1
0x00C4	0x28C3      	GOTO       L_main4
0x00C5	0x0BFC      	DECFSZ     R12, 1
0x00C6	0x28C3      	GOTO       L_main4
0x00C7	0x0000      	NOP
0x00C8	0x0000      	NOP
;programa10.c,56 :: 		}
L_main3:
;programa10.c,57 :: 		Chip_Select = 0;                       // Seleccionar la memoria
0x00C9	0x1387      	BCF        RC7_bit, BitPos(RC7_bit+0)
;programa10.c,58 :: 		SPI1_Write(0b00000101);                   //Lee el status de la memoria
0x00CA	0x3005      	MOVLW      5
0x00CB	0x00A4      	MOVWF      FARG_SPI1_Write_data_
0x00CC	0x201D      	CALL       _SPI1_Write
;programa10.c,59 :: 		ESTADO=SPI1_Read(0);
0x00CD	0x01A4      	CLRF       FARG_SPI1_Read_buffer
0x00CE	0x202A      	CALL       _SPI1_Read
;programa10.c,60 :: 		PORTE=ESTADO;
0x00CF	0x0870      	MOVF       R0, 0
0x00D0	0x0089      	MOVWF      PORTE
;programa10.c,61 :: 		Chip_Select = 1;                       // Deselecccionar la memoria
0x00D1	0x1787      	BSF        RC7_bit, BitPos(RC7_bit+0)
;programa10.c,62 :: 		}
0x00D2	0x2884      	GOTO       L_main0
;programa10.c,64 :: 		}
L_end_main:
0x00D3	0x28D3      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [13]    _Delay_500us
0x0010      [13]    _SPI1_Init
0x001D      [13]    _SPI1_Write
0x002A      [13]    _SPI1_Read
0x0037      [57]    _Button
0x0070     [100]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [0]    Chip_Select
0x0007       [0]    RC7_bit
0x0008       [1]    PORTD
0x0009       [1]    PORTE
0x000A       [1]    PCLATH
0x0013       [1]    SSPBUF
0x0014       [1]    SSPCON
0x0020       [2]    ___DoICPAddr
0x0022       [1]    main_DIRECCION_L0
0x0023       [1]    main_DATO_L0
0x0024       [1]    FARG_Button_port
0x0024       [1]    FARG_SPI1_Read_buffer
0x0024       [1]    FARG_SPI1_Write_data_
0x0025       [1]    FARG_Button_pin
0x0026       [1]    FARG_Button_time_ms
0x0027       [1]    FARG_Button_active_state
0x0028       [1]    Button_pMask_L0
0x0029       [1]    Button_rslt_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [0]    Chip_Select_Direction
0x0087       [0]    TRISC3_bit
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC7_bit
0x0087       [0]    TRISC5_bit
0x0088       [1]    TRISD
0x0089       [1]    TRISE
0x0094       [1]    SSPSTAT
0x0188       [1]    ANSEL
0x0189       [1]    ANSELH
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_end_main
  _main
  L_Button0
  L_Button1
  L_Button2
  L_Button3
  L_end_Button
  _Button
  L__Button5
  L__Button6
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_10ms9
  L_Delay_100ms10
  L_Delay_1sec11
  L_boot16_Delay_5ms12
  L_Delay_Cyc13
  L_Delay_Cyc14
  L_VDelay_ms15
  L_VDelay_ms16
  L_VDelay_ms17
  L_VDelay_Advanced_ms18
  L_VDelay_Advanced_ms19
  L_VDelay_Advanced_ms20
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_1sec
  _Delay_1sec
  L_end_boot16_Delay_5ms
  _boot16_Delay_5ms
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_VDelay_ms
  _VDelay_ms
  L__VDelay_ms38
  L__VDelay_ms39
  L__VDelay_ms40
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms42
  L__VDelay_Advanced_ms43
  L__VDelay_Advanced_ms44
  L_SPI1_Init_Advanced0
  L_SPI1_Init_Advanced1
  L_SPI1_Init_Advanced2
  L_SPI1_Init_Advanced3
  L_SPI1_Init_Advanced4
  L_SPI1_Init_Advanced5
  L_SPI1_Read6
  L_SPI1_Read7
  L_SPI1_Write8
  L_SPI1_Write9
  L_end_SPI1_Init
  _SPI1_Init
  L_end_SPI1_Init_Advanced
  _SPI1_Init_Advanced
  L_end_SPI1_Read
  _SPI1_Read
  L_end_SPI1_Write
  _SPI1_Write
